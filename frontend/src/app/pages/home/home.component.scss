@use "sass:color";
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;700&display=swap');

// ðŸŽ¨ Theme Variables
$primary-color: #8e44ad;
$accent-color: #f39c12;
$bg-gradient: linear-gradient(to right, #8e2de2, #4a00e0);
$text-color: #ffffff;
$main-bg: linear-gradient(to right, #8e2de2, #4a00e0);
$box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);

@mixin glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 20px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
}

.home-container {
  min-height: 100vh;
  padding: 2rem;
  background: $bg-gradient;
  color: $text-color;
  font-family: 'Raleway', sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  animation: fadeIn 1s ease-out;

  .intro {
    max-width: 600px;
    margin-bottom: 0rem;

    p {
      font-size: 1.4rem;
      margin-bottom: 1.5rem;
    }

    .typewriter {
      color: $text-color;
      font-size: 1.5rem;
      width: 100%;
      max-width: 600px;
      white-space: nowrap;
      overflow: hidden;
      border-right: 3px solid $accent-color;
      animation: typing 3.5s steps(50, end), blink-caret 0.75s step-end infinite;
      margin: 2rem auto;
      text-align: center;
    }
  }

  .quiz-setup {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    animation: fadeIn 1s ease-out;

    h2 {
      font-size: 2.2rem;
      color: #fff;
      margin-bottom: 1rem;
      animation: glow 2s infinite alternate;
    }
    h3 {
      font-size: 1.8rem;
      color: #fff;
      margin-bottom: 1.5rem;
      text-shadow: 0 0 15px rgba(255, 255, 255, 0.6);
      animation: pulse-glow 3s ease-in-out infinite alternate;
      position: relative;
      text-align: center;
      
      &::after {
        content: '';
        position: absolute;
        bottom: -8px;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 2px;
        background: linear-gradient(90deg, transparent, $accent-color, transparent);
        animation: line-expand 2s ease-in-out infinite alternate;
      }
      
      &::before {
        content: 'âœ¨';
        position: absolute;
        left: -40px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1.2rem;
        animation: sparkle-rotate 4s linear infinite;
      }
    }

    .category-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
      gap: 1.2rem;
      justify-content: center;
      width: 100%;
      max-width: 700px;
    }
    .category-card {
      @include glass;
      text-align: center;
      padding: 1rem;
      font-size: 1.2rem;
      cursor: pointer;
      border: 2px solid transparent;
      transition: all 0.3s ease;

      &:hover {
        transform: scale(1.08);
        border-color: $accent-color;
        box-shadow: 0 0 15px rgba(255, 255, 255, 0.3);
      }

      &.selected {
        background: $accent-color;
        color: #fff;
        transform: scale(1.1);
        font-weight: bold;
      }
    }


.difficulty-inputs {
  @include glass;
  position: relative;
  display: flex;
  margin: auto;
  flex-wrap: wrap;
  border-radius: 1rem;
  background: $main-bg;
  box-sizing: border-box;
  box-shadow: $box-shadow;
  padding: 0.5rem;
  width: 300px;
  font-size: 14px;
  gap: 0.5rem;
}

.difficulty-inputs .difficulty-radio {
  flex: 1 1 auto;
  text-align: center;
  position: relative;
}

.difficulty-inputs .difficulty-radio input {
  display: none;
}

.difficulty-inputs .difficulty-radio .name {
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  border-radius: 0.7rem;
  border: none;
  padding: 0.7rem 0;
  color: #ffff;
  font-weight: 500;
  font-family: inherit;
  background: linear-gradient(to right, #8e2de2, #4a00e0);
  box-shadow:
    inset 2px 2px 5px rgba(0, 0, 0, 0.2),
    inset -2px -2px 5px rgba(255, 255, 255, 0.1),
    3px 3px 8px rgba(59, 130, 246, 0.3);
  transition: all 0.2s ease;
  overflow: hidden;
}

.difficulty-inputs .difficulty-radio input:checked + .name {
  background: $accent-color;
  color: white;
  font-weight: 600;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow:
    inset 2px 2px 5px rgba(0, 0, 0, 0.2),
    inset -2px -2px 5px rgba(255, 255, 255, 0.1),
    3px 3px 8px rgba(59, 130, 246, 0.3);
  transform: translateY(2px);
}

/* Hover effect */
.difficulty-inputs .difficulty-radio:hover .name {
  background: $bg-gradient;
  transform: translateY(-1px);
  box-shadow: $accent-color;
}

.difficulty-inputs .difficulty-radio:hover input:checked + .name {
  transform: translateY(1px);
}

/* Animation */
.difficulty-inputs .difficulty-radio input:checked + .name {
  animation: select 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Particles */
.difficulty-inputs .difficulty-radio .name::before,
.difficulty-inputs .difficulty-radio .name::after {
  content: "";
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
}

.difficulty-inputs .difficulty-radio input:checked + .name::before,
.difficulty-inputs .difficulty-radio input:checked + .name::after {
  animation: particles 0.8s ease-out forwards;
}

.difficulty-inputs .difficulty-radio .name::before {
  background: #60a5fa;
  box-shadow: 0 0 6px #60a5fa;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
}

.difficulty-inputs .difficulty-radio .name::after {
  background: #93c5fd;
  box-shadow: 0 0 8px #93c5fd;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
}

/* Sparkles */
.difficulty-inputs .difficulty-radio .name::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    rgba(59, 130, 246, 0.3) 0%,
    transparent 50%
  );
  opacity: 0;
  transition: opacity 0.3s;
}

.difficulty-inputs .difficulty-radio input:checked + .name::after {
  opacity: 1;
  animation: sparkle-bg 1s ease-out forwards;
}

/* Multiple particles */
.difficulty-inputs .difficulty-radio input:checked + .name {
  overflow: visible;
}

.difficulty-inputs .difficulty-radio input:checked + .name::before {
  box-shadow:
    0 0 6px #60a5fa,
    10px -10px 0 #60a5fa,
    -10px -10px 0 #60a5fa;
  animation: multi-particles-top 0.8s ease-out forwards;
}

.difficulty-inputs .difficulty-radio input:checked + .name::after {
  box-shadow:
    0 0 8px #93c5fd,
    10px 10px 0 #93c5fd,
    -10px 10px 0 #93c5fd;
  animation: multi-particles-bottom 0.8s ease-out forwards;
}

@keyframes select {
  0% {
    transform: scale(0.95) translateY(2px);
  }
  50% {
    transform: scale(1.05) translateY(-1px);
  }
  100% {
    transform: scale(1) translateY(2px);
  }
}

@keyframes multi-particles-top {
  0% {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(1);
  }
  40% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(-20px) scale(0);
    box-shadow:
      0 0 6px transparent,
      20px -20px 0 transparent,
      -20px -20px 0 transparent;
  }
}

@keyframes multi-particles-bottom {
  0% {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(1);
  }
  40% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(20px) scale(0);
    box-shadow:
      0 0 8px transparent,
      20px 20px 0 transparent,
      -20px 20px 0 transparent;
  }
}

@keyframes sparkle-bg {
  0% {
    opacity: 0;
    transform: scale(0.2);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(2);
  }
}

/* Ripple effect */
.difficulty-inputs .difficulty-radio .name::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    rgba(255, 255, 255, 0.5) 0%,
    transparent 50%
  );
  opacity: 0;
  transition: opacity 0.3s;
}

.difficulty-inputs .difficulty-radio input:checked + .name::before {
  animation: ripple 0.8s ease-out;
}

@keyframes ripple {
  0% {
    opacity: 1;
    transform: scale(0.2);
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 0;
    transform: scale(2.5);
  }
}

/* Glowing border */
.difficulty-inputs .difficulty-radio input:checked + .name {
  position: relative;
}

.difficulty-inputs .difficulty-radio input:checked + .name::after {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  background: linear-gradient(
    45deg,
    rgba(59, 130, 246, 0.5),
    rgba(37, 99, 235, 0.5)
  );
  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  animation: border-glow 1.5s ease-in-out infinite alternate;
}

@keyframes border-glow {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}


  }
}

.custom-input-container {
  margin-top: 2rem;
  width: 100%;
  display: flex;
  justify-content: center;
}

.custom-category-input {
  @include glass;
  padding: 1rem 1.5rem;
  border: 2px solid rgba(255, 255, 255, 0.2);
  color: $text-color;
  font-size: 1.1rem;
  font-family: 'Raleway', sans-serif;
  width: 100%;
  max-width: 400px;
  text-align: center;
  margin-top: 1rem;
  
  &::placeholder {
    color: rgba(255, 255, 255, 0.7);
  }
  
  &:focus {
    outline: none;
    border-color: $accent-color;
    box-shadow: 0 0 20px rgba(243, 156, 18, 0.3);
  }
}

.start-quiz-btn {
  padding: 1rem 2rem;
  font-size: 1.2rem;
  font-weight: bold;
  color: $text-color;
  background: $accent-color;
  border: none;
  margin-top: 1rem;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-family: 'Raleway', sans-serif;
  width: fit-content;
  
  &:hover:not(:disabled) {
    transform: scale(1.05);
    box-shadow: 0 0 20px $accent-color;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}

// ðŸ”¢ Advanced Artistic Number Input Design 

// ðŸ”¢ Advanced Artistic Number Input Design (No HTML modifications needed)

h3 {
  font-size: 1.8rem;
  color: #fff;
  margin-bottom: 1.5rem;
  text-shadow: 0 0 15px rgba(255, 255, 255, 0.6);
  // Removed continuous pulsing animation
  position: relative;
  text-align: center;
  
  &::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background: linear-gradient(90deg, transparent, $accent-color, transparent);
    // Removed continuous line expansion animation
  }
  
  &::before {
    content: 'âœ¨';
    position: absolute;
    left: -40px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1.2rem;
    // Removed continuous sparkle rotation
  }
}

.number-input {
  position: relative;
  width: 100%;
  max-width: 320px;
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
  
  // Floating orbs background using pseudo-elements
  &::before {
    content: '';
    position: absolute;
    top: -25px;
    left: -25px;
    right: -25px;
    bottom: -25px;
    background: 
      radial-gradient(circle at 20% 30%, rgba(142, 68, 173, 0.3) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, rgba(243, 156, 18, 0.25) 0%, transparent 50%),
      radial-gradient(circle at 60% 20%, rgba(116, 185, 255, 0.2) 0%, transparent 50%);
    border-radius: 50px;
    // Subtle floating animation, less aggressive
    animation: orb-float-subtle 12s ease-in-out infinite;
    z-index: -1;
  }
  
  // Animated border effect using ::after
  &::after {
    content: '';
    position: absolute;
    inset: -3px;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(243, 156, 18, 0.6),
      transparent,
      rgba(142, 68, 173, 0.6),
      transparent,
      rgba(116, 185, 255, 0.4),
      transparent
    );
    border-radius: 23px;
    // Only animate border on interaction, not continuously
    animation: none;
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
  }
  
  // Show animated border only on hover/focus
  &:hover::after,
  &:focus-within::after {
    opacity: 1;
    animation: border-flow 3s linear infinite;
  }
  
  input[type="number"] {
    @include glass;
    width: 100%;
    height: 100%;
    border: 3px solid transparent;
    background: 
      linear-gradient(145deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.05)),
      linear-gradient(145deg, $primary-color, darken($primary-color, 10%));
    background-clip: padding-box, border-box;
    background-origin: border-box;
    color: $text-color;
    font-size: 2.5rem;
    font-weight: 700;
    font-family: 'Raleway', sans-serif;
    text-align: center;
    outline: none;
    position: relative;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    z-index: 1;
    
    // Remove default arrows
    appearance: textfield;
    -webkit-appearance: textfield;
    -moz-appearance: textfield;
    
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
    
    // Placeholder styling
    &::placeholder {
      color: rgba(255, 255, 255, 0.6);
      font-weight: 400;
    }
    
    // Focus state with advanced effects
    &:focus {
      border: 3px solid $accent-color;
      box-shadow: 
        0 0 30px rgba(243, 156, 18, 0.5),
        inset 0 2px 10px rgba(0, 0, 0, 0.2),
        0 8px 40px rgba(0, 0, 0, 0.3),
        0 0 0 8px rgba(243, 156, 18, 0.1);
      transform: scale(1.05) translateY(-3px);
      background: 
        linear-gradient(145deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.1)),
        linear-gradient(145deg, lighten($primary-color, 8%), $primary-color);
      // Removed continuous pulse animation
      animation: input-focus-pulse 0.6s ease-out;
    }
    
    // Hover state
    &:hover:not(:focus) {
      transform: scale(1.02) translateY(-1px);
      box-shadow: 
        0 6px 25px rgba(0, 0, 0, 0.2),
        0 0 20px rgba(255, 255, 255, 0.15);
      border-color: rgba(243, 156, 18, 0.5);
    }
    
    // Value-based styling (using attribute selectors for dynamic effects)
    &[value="1"] { box-shadow: 0 0 15px rgba(255, 99, 132, 0.3); }
    &[value="10"] { box-shadow: 0 0 15px rgba(255, 206, 84, 0.3); }
    &[value="25"] { box-shadow: 0 0 15px rgba(75, 192, 192, 0.3); }
    &[value="50"] { box-shadow: 0 0 15px rgba(153, 102, 255, 0.3); }
  }
  
  // Custom increment/decrement buttons using pseudo-elements
  &:hover {
    &::before {
      content: '+';
      position: absolute;
      right: 12px;
      top: 18px;
      width: 24px;
      height: 20px;
      background: linear-gradient(145deg, rgba(243, 156, 18, 0.8), rgba(243, 156, 18, 0.6));
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      color: white;
      font-weight: bold;
      font-size: 14px;
      z-index: 2;
      transition: all 0.2s ease;
      opacity: 0;
      animation: button-fade-in 0.3s ease forwards;
    }
  }
  
  // Progress indicator at bottom using gradient
  &[data-progress]::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 0;
    height: 4px;
    width: calc(var(--progress, 50) * 1%);
    background: linear-gradient(90deg, $accent-color, lighten($accent-color, 15%));
    border-radius: 2px;
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
  }
  
  &:focus-within[data-progress]::after {
    opacity: 1;
    // Removed continuous shimmer animation
  }
}

// Enhanced container effects
.number-input {
  // Particle effects using multiple pseudo-elements and box-shadows
  &:focus-within {
    &::before {
      box-shadow: 
        20px 10px 0 2px rgba(243, 156, 18, 0.6),
        -15px 15px 0 1px rgba(142, 68, 173, 0.5),
        25px -20px 0 1px rgba(116, 185, 255, 0.4),
        -20px -10px 0 2px rgba(243, 156, 18, 0.3);
      animation: orb-float-subtle 12s ease-in-out infinite, particle-scatter 1.2s ease-out;
    }
  }
  
  // Dynamic glow based on input value
  &:has(input[value="50"]) {
    &::after {
      background: linear-gradient(45deg, 
        rgba(255, 0, 150, 0.6), 
        rgba(0, 255, 255, 0.6),
        rgba(255, 255, 0, 0.6)
      );
      animation: rainbow-border 2s linear infinite;
    }
  }
}

// Floating labels and value display
.number-input input:focus + *::after,
.number-input input:not(:placeholder-shown) + *::after {
  content: attr(data-label, "Questions Selected");
  position: absolute;
  bottom: -40px;
  left: 50%;
  transform: translateX(-50%);
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.85rem;
  font-weight: 300;
  opacity: 1;
  animation: label-slide-up 0.3s ease;
}

// Advanced Animations
@keyframes pulse-glow {
  0% {
    text-shadow: 0 0 15px rgba(255, 255, 255, 0.6);
    transform: scale(1);
  }
  100% {
    text-shadow: 
      0 0 25px rgba(255, 255, 255, 0.8), 
      0 0 35px rgba(243, 156, 18, 0.4),
      0 0 45px rgba(243, 156, 18, 0.2);
    transform: scale(1.02);
  }
}

@keyframes line-expand {
  0% {
    width: 60px;
    opacity: 0.6;
  }
  100% {
    width: 120px;
    opacity: 1;
    box-shadow: 0 0 10px rgba(243, 156, 18, 0.5);
  }
}

@keyframes sparkle-rotate {
  0% { 
    transform: translateY(-50%) rotate(0deg) scale(1);
    opacity: 0.7;
  }
  50% { 
    transform: translateY(-50%) rotate(180deg) scale(1.2);
    opacity: 1;
  }
  100% { 
    transform: translateY(-50%) rotate(360deg) scale(1);
    opacity: 0.7;
  }
}

// More subtle floating animation
@keyframes orb-float-subtle {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    opacity: 0.6;
  }
  50% {
    transform: scale(1.02) rotate(180deg);
    opacity: 0.8;
  }
}

// Border flow animation (only on interaction)
@keyframes border-flow {
  0% {
    transform: rotate(0deg);
    filter: hue-rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
    filter: hue-rotate(360deg);
  }
}

// Rainbow border (only for max value)
@keyframes rainbow-border {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

// Single-use focus animation (not infinite)
@keyframes input-focus-pulse {
  0% {
    transform: scale(1.05) translateY(-3px);
    box-shadow: 0 0 30px rgba(243, 156, 18, 0.8);
  }
  50% {
    transform: scale(1.08) translateY(-5px);
    box-shadow: 0 0 40px rgba(243, 156, 18, 1);
  }
  100% {
    transform: scale(1.05) translateY(-3px);
    box-shadow: 0 0 30px rgba(243, 156, 18, 0.5);
  }
}

@keyframes particle-scatter {
  0% {
    box-shadow: 
      0 0 0 0 rgba(243, 156, 18, 1),
      0 0 0 0 rgba(142, 68, 173, 1),
      0 0 0 0 rgba(116, 185, 255, 1);
  }
  50% {
    box-shadow: 
      30px 15px 0 3px rgba(243, 156, 18, 0.8),
      -25px 20px 0 2px rgba(142, 68, 173, 0.7),
      35px -25px 0 2px rgba(116, 185, 255, 0.6);
  }
  100% {
    box-shadow: 
      50px 25px 0 1px rgba(243, 156, 18, 0),
      -40px 35px 0 1px rgba(142, 68, 173, 0),
      55px -45px 0 1px rgba(116, 185, 255, 0);
  }
}

@keyframes button-fade-in {
  0% {
    opacity: 0;
    transform: translateY(10px) scale(0.8);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: 200px 0;
  }
}

@keyframes label-slide-up {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .number-input {
    max-width: 280px;
    height: 70px;
    
    input[type="number"] {
      font-size: 2rem;
    }
  }
  
  h3 {
    font-size: 1.5rem;
    
    &::before {
      left: -30px;
      font-size: 1rem;
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .number-input input[type="number"] {
    border: 3px solid $accent-color;
    background: rgba(0, 0, 0, 0.8);
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// Add a subtle animation for form appearance
form {
  animation: fadeIn 1s ease-out 0.5s both;
}

.emoji-sky {
  display: flex;
  justify-content: center;
  gap: 2rem;
  flex-wrap: wrap;
  padding: 1.5rem 0;
  animation: float 8s ease-in-out infinite;
}

.emoji {
  font-size: 2.2rem;
  transition: transform 0.5s ease;
  animation: rotate 12s linear infinite;
  
  &:hover {
    transform: scale(1.3) rotate(10deg);
  }
}


// ðŸŽž Animations
@keyframes glow {
  from {
    text-shadow: 0 0 10px $accent-color;
  }
  to {
    text-shadow: 0 0 25px $accent-color, 0 0 10px $accent-color;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from,to {
    border-color : transparent;
  }
  50% {
    border-color: $accent-color;
  }
}

// Floating up and down
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
  100% {
    transform: translateY(0px);
  }
}

// Slow rotation
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

